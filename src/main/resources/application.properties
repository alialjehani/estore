#H2 new
# h2 database

spring.h2.console.enable=true;
spring.h2.console.path=/h2

#In order for H2 to run security as Oauth the jpa hibernate needs to be "update" instead of create
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.show-sql=true
server.port = 8081


## h2 database

#spring.h2.console.enable=true;
#spring.h2.console.path=/h2
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#server.port = 8081
#spring.security.user.name=user
#spring.security.user.password=ali123
#spring.security.user.roles=admin
#spring.h2.console.enabled=true

# H2 Database
#spring.datasource.url=jdbc:h2:file:~/db/ALITESTDB
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver


#MySQL
#spring.datasource.driver-class-name=com.mysql.jdbc-Driver
#spring.datasource.username=
#spring.datasource.password=
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.datasource.url=jdbc:mysql://localhost:3306/local

#
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:mysql://localhost:3306/mydb
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#server.port=3306
